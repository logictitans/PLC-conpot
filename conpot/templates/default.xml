<conpot_template name="S7-200" description="Rough simulation of a basic Siemens S7-200 CPU with 2 slaves">
    <core>
        <datastore>
            <key_value_mappings>
                <key name="SystemDescription">
                    <value type="value">"Siemens, SIMATIC, S7-200"</value>
                </key>
                <key name="Uptime">
                    <value type="function">conpot.emulators.misc.uptime.Uptime</value>
                </key>
                <key name="sysObjectID">
                    <value type="value">"0.0"</value>
                </key>
                <key name="sysContact">
                    <value type="value">"Siemens AG"</value>
                </key>
                <key name="sysName">
                    <value type="value">"CP 443-1 EX40"</value>
                </key>
                <key name="sysLocation">
                    <value type="value">"Venus"</value>
                </key>
                <key name="sysServices">
                </key>
            </key_value_mappings>
        </datastore>
    </core>
    <protocols>
        <snmp enabled="True" host="0.0.0.0" port="161">
            <config>
                <!-- Configure individual delays for SNMP commands -->
                <entity name="tarpit" command="get">0.1;0.2</entity>
                <entity name="tarpit" command="set">0.1;0.2</entity>
                <entity name="tarpit" command="next">0.0;0.1</entity>
                <entity name="tarpit" command="bulk">0.2;0.4</entity>

                <!-- Configure DoS evasion thresholds (req_per_ip/minute;req_overall/minute) -->
                <entity name="evasion" command="get">120;240</entity>
                <entity name="evasion" command="set">120;240</entity>
                <entity name="evasion" command="next">240;600</entity>
                <entity name="evasion" command="bulk">120;240</entity>
            </config>
            <mibs>
                <mib name="SNMPv2-MIB">
                    <symbol name="sysDescr">
                        <!-- Values maps to keys in the datastore -->
                        <value>SystemDescription</value>
                    </symbol>
                    <symbol name="sysUpTime">
                        <value>Uptime</value>
                    </symbol>
                    <symbol name="sysContact">
                        <value>sysContact</value>
                    </symbol>
                    <symbol name="sysName">
                        <value>sysName</value>
                    </symbol>
                    <symbol name="sysLocation">
                        <value>sysLocation</value>
                    </symbol>
                    <symbol name="sysServices">
                        <value>sysServices</value>
                    </symbol>
                </mib>
            </mibs>
        </snmp>
        <modbus enabled="True" host="0.0.0.0" port="502">
            <device_info>
                <VendorName>Siemens</VendorName>
                <ProductCode>SIMATIC</ProductCode>
                <MajorMinorRevision>S7-200</MajorMinorRevision>
            </device_info>
            <slaves>
                <slave id="1">
                    <blocks>
                        <block name="a">
                            <!-- COILS/DISCRETE_OUTPUTS aka. binary output, power on/power off
                                 Here we map modbus addresses 1 to 127 to S7-200 PLC Addresses Q0.0 to Q15.7 -->
                            <type>COILS</type>
                            <starting_address>1</starting_address>
                            <size>128</size>
                            <values>
                                <value>
                                    <address>1</address>
                                    <!-- Will be parsed with eval() -->
                                    <content>[random.randint(0,1) for b in range(0,128)]</content>
                                </value>
                            </values>
                        </block>
                        <block name="b">
                            <!-- CONTACTS/DISCRETE_INPUTS aka. binary input.
                                 Map modbus addresses 10001-10032 to S7-200 PLC inputs starting from I0.0  -->
                            <type>DISCRETE_INPUTS</type>
                            <starting_address>10001</starting_address>
                            <size>32</size>
                            <values>
                                <value>
                                    <address>10001</address>
                                    <!-- Will be parsed with eval() -->
                                    <content>[random.randint(0,1) for b in range(0,32)]</content>
                                </value>
                            </values>
                        </block>
                    </blocks>
                </slave>
                <slave id="2">
                    <!-- This slave does some measuring. (analog inputs).
                         Map modbus addresses 30001-30009 to S7 PLC analog input bits AIW0-AIW8 -->
                    <blocks>
                        <block name="c">
                            <!-- Will be parsed with eval() -->
                            <type>ANALOG_INPUTS</type>
                            <starting_address>30001</starting_address>
                            <size>8</size>
                            <values>
                                <value>
                                    <address>30001</address>
                                    <!-- Will be parsed with eval() -->
                                    <content>[random.randint(0,1) for b in range(0,8)]</content>
                                </value>
                            </values>
                        </block>
                        <block name="d">
                            <!-- Maps to S7-200 PLC addresses HoldStart+8 -->
                            <type>HOLDING_REGISTERS</type>
                            <starting_address>40001</starting_address>
                            <size>8</size>
                        </block>
                    </blocks>
                </slave>
            </slaves>
        </modbus>
    </protocols>
</conpot_template>
